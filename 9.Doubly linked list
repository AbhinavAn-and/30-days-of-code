#include<stdio.h>
#include<conio.h>
#include<ctype.h>

struct node
{
	char ssn[3],name[10],branch[6],des[3],salary[6],phone[10];
	struct node *llink;
	struct node *rlink;
};
struct node *head=NULL;
struct node *createnode()
{         char c;
	struct node *temp;
	temp=(struct node*)malloc(sizeof(struct node));
	printf("enter ssn\n");
	fflush(stdin);
	c=getchar();
	gets(temp->ssn);
	printf("enter the name\n");
	gets(temp->name);
	printf("enter the branch\n");
	gets(temp->branch);
	printf("enter the designation\n");
	gets(temp->des);
	printf("enter the salary\n");
	gets(temp->salary);
	printf("enter the phone number\n");
	gets(temp->phone);
	temp->llink=NULL;
	temp->rlink=NULL;
	return temp;
}

void insertfront()
{
	struct node *temp=NULL;
	temp=createnode();
	if(head!=NULL)
	{
		temp->rlink=head;
		head->llink=temp;
	}
	head=temp;
}
void delfront()
{
	struct node *temp=head;
	if(head==NULL)
	{
		printf("doubly link is empty\n");
		return;
	}
	printf("the deleted node is:\n");
	printf("ssn=%s",temp->ssn);
	printf("name=%s",temp->name);
	printf("branch=%s",temp->branch);
	printf("phone=%s",temp->phone);
	printf("salary=%s",temp->salary);
	head=temp->rlink;
	head->llink=NULL;
	free(temp);
}
void insertend()
{
	struct node *temp1,*temp2=head;
	temp1=createnode();
	if(head==NULL)
	{
		head=temp1;
		return;
	}
	else
	{
		while(temp2->rlink!=NULL)
		{
			temp2=temp2->rlink;
		}
			temp2->rlink=temp1;
			temp1->llink=temp2;

 }
 }
void deleteend()
{
	struct node *temp1,*temp2=head;
	if(head==NULL)
	{
		printf("doubly link list is empty\n");
		return;
	}
	while(temp2->rlink!=NULL)
      {		temp2=temp2->rlink;
	printf("the deleted node is:\n");
	printf("ssn=%s",temp2->ssn);
	printf("name=%s",temp2->name);
	printf("branch=%s",temp2->branch);
	printf("phone=%s",temp2->phone);
	printf("salary=%s",temp2->salary);
	temp2->llink=temp2->rlink=NULL;
	free(temp2);
}
}
void create()
{
	int n,i;
	printf("enter the number of employee\n");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	insertend();
}
void display()
{
	int c=0;
	struct node *temp=head;
	while(temp!=NULL)
	{      printf("THE NODE %d is ",c+1);
		printf("%s\t",temp->ssn);
		printf("%s\t",temp->ssn);
		printf("%s\t",temp->branch);
		printf("%s\t",temp->phone);
		printf("%s\t",temp->salary);
		c=c+1;
		temp=temp->rlink;
	}
	printf("the number of nodes is=%d",c);
}
void dequeue()
{
	int choice;
	printf("enter your choice\n1.insert at frontf\n2.insert at rear\n3.delete from front\n4.delete from rear\n5.display\n");
	scanf("%d",&choice);
	switch(choice)
	{
		case 1:printf("enter the details\n");
			insertfront();
			break;
		case 2:printf("enter the details\n");
			insertend();
			break;
		case 3:delfront();
			break;
		case 4:deleteend();
	}
}
void main()
{
	int ch1,ch2,ch3;
	clrscr();
	while(1)
	{
		printf("enter your choice\n1.create\n2.display and count\n3.insert and delete at end\n4.insert and delete from front\n5.DLL as dequeue\n6,exit\n");
		scanf("%d",&ch1);
		switch(ch1)
		{
			case 1:create();
				break;
			case 2:display();
				break;
			case 3:printf("enter your choice\n1.insert\n2.delete\n");
				scanf("%d",&ch2);
				if(ch2==1)
					insertend();
				else
					deleteend();
				break;
			case 4:printf("enter your cjhoice\n1.insert\n2.delete\n");
				scanf("%d",&ch3);
				if(ch3==1)
					insertfront();
				else
					delfront();
				break;
			case 5:dequeue();
				break;
			case 6:exit(0);
		}
	}
}

